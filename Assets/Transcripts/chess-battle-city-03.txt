Welcome to EP03 of chess battle city in javascript


We will talk about assets and how to manage them,
so among the assets you may have are the following
images, sounds, and json files.
each of these types have a way to load.

I have prepared one of each to make this demo,
starting with the sprite sheet presented here.
the red and green marks are just for explanation 
and will not be in the actual image

in this image we have the numbers from 0 to 9, letters A to Z
few tanks, few bricks and 3 bullets.

what is important to us is that we know the location and width/height
of each element we want in the image.
so we are able to load.

for now let us talk about loading this stuff and then how we manage all of them
* loading image
loading an image can be done in several ways,
using img tag in html with src to actual image
using img tag in html with src to base64 string representing an image
using javascript, which is what we will use.
*Loading json
Loading json is very simple, we also have serveral methods, a very nice on is usig fetch
fetch will take a url as parameter and return a promise, if we need to get the josn in it we will use .json, which is also a promise
so we will create an async function that will make both of these, so we would have
*Loading Audio
new Audio("Assets/Sound/stage_start.ogg");
*GLOBAL.js
so now we have only three stuff to load,
but we will start preparing for the worse,
we will create new js file in the root of our scripts folder
which we use to store all the config that we want and include it in the index.html, before main.js
*AssetsManager.JS
in addition to having the previously mentioned loader
this class will help us in loading all the assets from the begining.
all the images, all the sounds, all of json files
easing the access to them though the rest of the js classes.

so to make it active we need to import it in the main.js file and fire its function load assets
and we may access how much have been loaded though the getLoadStatus and control what happen when
all the things have been loaded.

this will be all for this episode.. thanks for watching.





